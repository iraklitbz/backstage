// --------------------------------
// (START) Global Editor code https://codyhouse.co/ds/globals/buttons
// --------------------------------
:root {
    --btn-font-size: 1em;
    --btn-font-size-sm: calc(var(--btn-font-size) - 0.2em);
    --btn-font-size-md: calc(var(--btn-font-size) + 0.2em);
    --btn-font-size-lg: calc(var(--btn-font-size) + 0.4em);
    --btn-padding-x: var(--space-sm); // padding left + right
    --btn-padding-y: var(--space-xs); // padding top + bottom
    --btn-radius: 0.25em;
}

.btn {
    // basic button style
    box-shadow: 0 4px 16px alpha(var(--color-black), 0.15);
    cursor: pointer;
}

// themes
.btn--primary {
    @include fontSmooth;
}

.btn--accent {
    @include fontSmooth;
}

.btn--subtle {}

// feedback
.btn--disabled {
    opacity: 0.6;
    cursor: not-allowed;
}

// sizes
.btn--sm {}

.btn--md {}

.btn--lg {}

// --------------------------------
// (END) Global Editor Code
// --------------------------------

/* -------------------------------- 

File#: _2_dropdown
Title: Dropdown
Descr: A hoverable link that toggles the visibility of a dropdown list
Usage: codyhouse.co/license

-------------------------------- */

:root {
    --dropdown-item-padding: var(--space-xxs) var(--space-sm);
}

.dropdown {
    position: relative;
    display: inline-block;
}

.dropdown__menu {
    width: 200px;
    border-radius: var(--radius-md);
    padding: var(--space-xxs) 0;
    background-color: var(--color-bg);
    box-shadow: var(--shadow-sm);
    z-index: var(--zindex-popover);
    position: absolute;
    left: 0;
    top: 100%;
    // reset spacing and text units - no longer affected by em units
    @include spaceUnit(1rem);
    @include textUnit(1rem);
    // hide
    clip: rect(1px, 1px, 1px, 1px);
    clip-path: inset(50%);
}

.dropdown__wrapper:hover>.dropdown__menu,
.dropdown__sub-wrapper:hover>.dropdown__menu {
    // show dropdown menu
    clip: auto;
    clip-path: none;
}

.dropdown__sub-wrapper:hover>.dropdown__menu {
    left: 100%;
}

.dropdown__item {
    display: block;
    text-decoration: none;
    color: var(--color-contrast-high);
    padding: var(--dropdown-item-padding);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    &:hover,
    &.dropdown__item--hover {
        background-color: var(--color-contrast-lower);
    }
}

.dropdown__separator {
    // h line divider
    height: 1px;
    background-color: var(--color-contrast-low);
    margin: var(--dropdown-item-padding);
}

.dropdown__sub-wrapper {
    position: relative;
    >.dropdown__item {
        // item w/ right arrow
        position: relative;
        padding-right: calc(var(--space-sm) + 12px);
        .icon {
            // right arrow
            position: absolute;
            display: block;
            width: 12px;
            height: 12px;
            right: var(--space-xxs);
            top: calc(50% - 6px);
        }
    }
    >.dropdown__menu {
        // sub menu
        top: calc(var(--space-xxs) * -1);
        box-shadow: var(--shadow-md);
    }
}

.js {
    // add animations if JS = enabled
    .dropdown__menu {
        top: calc(100% + 4px); // add a 4px margin between trigger and dropdown
    }
    .dropdown__sub-wrapper {
        .dropdown__menu {
            top: calc(var(--space-xxs) * -1);
        }
    }
    .dropdown__menu--is-visible {
        clip: auto;
        clip-path: none;
        animation: dropdown-show 0.2s forwards;
    }
    .dropdown__menu--is-hidden {
        animation: dropdown-hide 0.2s;
    }
    .dropdown__sub-wrapper>.dropdown__menu--is-visible,
    .dropdown__sub-wrapper>.dropdown__menu--is-hidden {
        left: 100%;
        &.dropdown__menu--left {
            left: -100%;
        }
    }
}

@keyframes dropdown-show {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

@keyframes dropdown-hide {
    0% {
        clip: auto;
        clip-path: none;
        opacity: 1;
    }
    100% {
        clip: auto;
        clip-path: none;
        opacity: 0;
    }
}


/* The switch - the box around the slider */

.switch {
    position: relative;
    display: inline-block;
    width: 60px;
    height: 34px;
}


/* Hide default HTML checkbox */

.switch input {
    opacity: 0;
    width: 0;
    height: 0;
}


/* The slider */

.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    -webkit-transition: .4s;
    transition: .4s;
}

.slider:before {
    position: absolute;
    content: "";
    height: 26px;
    width: 26px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    -webkit-transition: .4s;
    transition: .4s;
}

.slider.checked {
    background-color: var(--color-success);
}

.slider.checked {
    box-shadow: 0 0 1px var;
}

.slider.checked:before {
    -webkit-transform: translateX(26px);
    -ms-transform: translateX(26px);
    transform: translateX(26px);
}


/* Rounded sliders */

.slider.round {
    border-radius: 34px;
}

.slider.round:before {
    border-radius: 50%;
}

.file-upload {
    .file-upload__input {
        // visually hide input file element
        @include srHide;
        width: 1px;
        height: 1px;
    }
    .file-upload__text--has-max-width {
        // set a max width to the label text
        max-width: 100%;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }
    .file-upload__label {
        width: 100%;
        margin-bottom: 10px;
    }
}

.uploader-file {
    width: 100%;
    margin-top: 10px;
    display: none;
}

.uploader-file.active {
    width: 100%;
    margin-top: 10px;
    display: block;
}

.btn-pdftoprint {
    cursor: pointer;
    text-decoration: none;
    color: #999;
    transition: color 0.2s linear;
    &:hover {
        color: #333;
    }
}

.menu {
    --menu-vertical-gap: 4px; // vertical gap between the Menu element and its control
    --menu-item-padding: var(--space-xxs) var(--space-sm);
    list-style: none;
    width: 220px;
    position: fixed; // top/left position set in JS
    background-color: var(--color-bg);
    box-shadow: var(--shadow-md);
    padding: var(--space-xxs) 0;
    border-radius: var(--radius-md);
    z-index: var(--zindex-popover);
    user-select: none;
    margin-top: var(--menu-vertical-gap);
    margin-bottom: var(--menu-vertical-gap);
    overflow: auto;
    // reset spacing and text units - no longer affected by em units
    @include spaceUnit(1rem);
    @include textUnit(1rem);
    visibility: hidden;
    opacity: 0;
    transition: visibility 0s .2s, opacity .2s;
}

.menu--is-visible {
    visibility: visible;
    opacity: 1;
    transition: visibility 0s, opacity .2s;
}

.menu--overlay {
    z-index: var(--zindex-overlay);
}

.menu__content {
    display: block; // fallback
    display: flex;
    align-items: center;
    text-decoration: none; // reset link style
    padding: var(--menu-item-padding);
    color: var(--color-contrast-high);
    cursor: pointer;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    &:hover {
        background-color: var(--color-contrast-lower);
    }
    &:focus {
        outline: none;
        background-color: alpha(var(--color-primary), 0.1);
    }
}

.menu__label {
    padding: var(--menu-item-padding);
    font-size: var(--text-sm);
    color: var(--color-contrast-medium);
}

.menu__separator {
    height: 1px;
    background-color: var(--color-contrast-low);
    margin: var(--menu-item-padding);
}

.menu__icon {
    color: alpha(var(--color-contrast-higher), 0.7);
    margin-right: var(--space-xxs);
}

:root {
    --menu-bar-button-size: 2.5em; // size of the menu buttons
    --menu-bar-icon-size: 1em; // size of the icons inside the buttons
    --menu-bar-horizontal-gap: var(--space-xxs); // horizontal gap between buttons
    --menu-bar-vertical-gap: 4px; // vertical gap between buttons and labels (tooltips)
    --menu-bar-label-size: var(--text-xs); // label font size
}

.menu-bar {
    list-style: none;
    display: inline-flex;
    align-items: center;
}

.menu-bar__item {
    // menu button
    position: relative;
    display: inline-block; // flex fallback
    display: flex;
    align-items: center;
    justify-content: center;
    height: var(--menu-bar-button-size);
    width: var(--menu-bar-button-size);
    border-radius: 50%;
    cursor: pointer;
    transition: background-color .2s;
    &:not(:last-child) {
        margin-right: var(--menu-bar-horizontal-gap);
    }
    &:hover,
    &.menu-control--active {
        background-color: var(--color-contrast-lower);
        >.menu-bar__icon {
            color: var(--color-contrast-higher);
        }
        >.menu-bar__label {
            // show label
            clip: auto;
            clip-path: none;
            height: auto;
            width: auto;
        }
    }
    &:focus {
        outline: none;
        background-color: alpha(var(--color-primary), 0.1);
    }
    &:active {
        background-color: var(--color-contrast-low);
    }
    &:focus:active {
        background-color: alpha(var(--color-primary), 0.2);
    }
}

.menu-bar__item--trigger {
    // button used to show hidden actions - visibile only if menu = collapsed
    display: none;
}

.menu-bar__icon {
    display: block;
    color: var(--color-contrast-high);
    font-size: var(--menu-bar-icon-size); // set icon size
    transition: color .2s;
}

.menu-bar__label {
    // label visible on :hover
    // hide
    position: absolute;
    clip: rect(1px, 1px, 1px, 1px);
    clip-path: inset(50%);
    width: 1px;
    height: 1px;
    overflow: hidden;
    white-space: nowrap;
    // style
    top: 100%;
    left: 50%;
    transform: translateX(-50%) translateY(var(--menu-bar-vertical-gap));
    padding: var(--space-xxs) var(--space-xs);
    color: var(--color-bg);
    background-color: alpha(var(--color-contrast-higher), 0.95);
    border-radius: var(--radius-md);
    font-size: var(--menu-bar-label-size);
    @include fontSmooth;
    pointer-events: none;
    user-select: none;
}

.menu-bar--collapsed {
    // mobile layout style
    .menu-bar__item--hide {
        // hide buttons 
        display: none;
    }
    .menu-bar__item--trigger {
        // show submenu trigger
        display: inline-block; // flex fallback
        display: flex;
    }
}

// detect when the menu needs to switch from the mobile layout to an expanded one - used in JS
.js {
    .menu-bar {
        opacity: 0; // hide menu bar while it is initialized in JS
        &::before {
            display: none;
            content: 'collapsed';
        }
    }
    .menu-bar--loaded {
        opacity: 1;
    }
    @each $breakpoint,
    $value in $breakpoints {
        .menu-bar--expanded\@#{$breakpoint}::before {
            @include breakpoint(#{$breakpoint}) {
                content: 'expanded';
            }
        }
    }
}